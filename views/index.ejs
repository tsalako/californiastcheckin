<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>California St. Check-in</title>
    <link rel="stylesheet" href="/style.css" />
    <script src="https://accounts.google.com/gsi/client" async defer></script>
  </head>
  <body>
    <div class="container">
      <h2 class="form-title">California St. Check-in</h2>

      <div class="form-content">
        <!-- Identity -->
        <div class="stack-slot">
          <div id="signinWrapper" class="slot-item hidden">
            <div
              id="g_id_onload"
              data-client_id="<%= googleClientId %>"
              data-callback="onSignIn"
              data-auto_prompt="false"
            ></div>
            <div
              class="g_id_signin"
              data-type="standard"
              data-size="large"
              data-theme="outline"
              data-text="sign_in_with"
              data-shape="rectangular"
              data-logo_alignment="left"
            ></div>
          </div>
          <div id="signedInWrapper" class="slot-item hidden">
            <p id="signedInAs" class="signed-in-as"></p>
          </div>
        </div>

        <!-- Action buttons -->
        <div class="stack-slot">
          <div id="createWrapper" class="slot-item hidden">
            <button id="createPassSubmit" class="button">Create Pass</button>
          </div>
          <div id="recordWrapper" class="slot-item hidden">
            <button id="recordVisit" class="button">Record Visit</button>
          </div>
        </div>

        <!-- Feedback + Wallet -->
        <div class="feedback-wallet-wrapper">
          <div id="feedback" class="feedback" aria-live="polite"></div>
          <div id="button" class="wallet-button-wrapper"></div>
        </div>
      </div>
    </div>

    <script>
      let idToken = "",
        userEmail = "",
        fullName = "";
      let isRecording = false;
      const isApple = /iPhone|iPad|iPod/i.test(navigator.userAgent);
      const platform = isApple ? "apple" : "google";

      const feedbackEl = document.getElementById("feedback");
      const recordVisit = document.getElementById("recordVisit");

      function onSignIn(response) {
        idToken = response.credential;
        const payload = JSON.parse(atob(idToken.split(".")[1]));
        userEmail = payload.email;
        fullName = payload.name;

        document.cookie = `userEmail=${userEmail}; path=/; max-age=${
          60 * 60 * 24 * 366
        }`;
        document.cookie = `name=${fullName}; path=/; max-age=${
          60 * 60 * 24 * 366
        }`;

        document
          .getElementById("signinWrapper")
          .classList.replace("visible", "hidden");
        document
          .getElementById("signedInWrapper")
          .classList.replace("hidden", "visible");
        document.getElementById("signedInAs").textContent = `${fullName}`;

        fetch(
          `/hasPass?email=${encodeURIComponent(
            userEmail
          )}&idToken=${encodeURIComponent(idToken)}&platform=${platform}`
        )
          .then((res) => res.json())
          .then(({ exists }) => {
            if (exists) {
              document
                .getElementById("recordWrapper")
                .classList.replace("hidden", "visible");
              recordVisit.click();
            } else {
              document
                .getElementById("createWrapper")
                .classList.replace("hidden", "visible");
            }
          });
      }

      window.addEventListener("DOMContentLoaded", () => {
        const signinWrapper = document.getElementById("signinWrapper");
        signinWrapper.classList.replace("hidden", "visible");
        const cookies = document.cookie.split("; ").reduce((acc, c) => {
          const [k, v] = c.split("=");
          acc[k] = decodeURIComponent(v);
          return acc;
        }, {});

        const email = cookies.userEmail;
        const name = cookies.name;
        if (!email) return;

        userEmail = email;
        fullName = name;

        document
          .getElementById("signinWrapper")
          .classList.replace("visible", "hidden");
        document
          .getElementById("signedInWrapper")
          .classList.replace("hidden", "visible");
        document.getElementById("signedInAs").textContent = name;

        fetch(
          `/hasPass?email=${encodeURIComponent(email)}&platform=${platform}`
        )
          .then((res) => res.json())
          .then(({ exists }) => {
            if (exists) {
              document
                .getElementById("recordWrapper")
                .classList.replace("hidden", "visible");
              recordVisit.click();
            } else {
              document
                .getElementById("createWrapper")
                .classList.replace("hidden", "visible");
            }
          });
      });

      const createPassSubmit = document.getElementById("createPassSubmit");
      createPassSubmit.addEventListener("click", async () => {
        createPassSubmit.disabled = true;
        createPassSubmit.textContent = "Creating...";

        const container = document.getElementById("button");
        const email = userEmail;
        const name = fullName;
        const token = idToken;

        const res = await fetch(`/create-pass`, {
          method: "POST",
          headers: { "Content-Type": "application/x-www-form-urlencoded" },
          body: `name=${encodeURIComponent(name)}&email=${encodeURIComponent(
            email
          )}&idToken=${encodeURIComponent(token)}&platform=${platform}`,
        });

        if (res.ok) {
          const data = await res.json();
          createPassSubmit.textContent = "Created";
          const a = document.createElement("a");
          a.href = platform === "apple" ? data.url : data.button;
          a.innerHTML =
            platform === "apple"
              ? '<img src="apple-wallet-button.svg" alt="Save to Apple Wallet" style="height: 50px; width: auto;">'
              : '<img src="google-wallet-button.png" alt="Save to Google Wallet">';
          container.innerHTML = "";
          container.appendChild(a);
          container.classList.add("show");
        } else {
          const data = await res.json().catch(() => ({}));
          feedbackEl.textContent = data.message || "⚠️ Failed to create pass.";
          feedbackEl.classList.add("show");
          createPassSubmit.textContent = "Create Pass";
          createPassSubmit.disabled = false;
        }
      });

      recordVisit.addEventListener("click", async () => {
        recordVisit.disabled = true;
        recordVisit.textContent = "Recording...";

        const email = userEmail;
        const token = idToken;
        const name = fullName;

        const res = await fetch("/record-visit", {
          method: "POST",
          headers: { "Content-Type": "application/x-www-form-urlencoded" },
          body: `name=${encodeURIComponent(name)}&email=${encodeURIComponent(
            email
          )}&idToken=${encodeURIComponent(token)}&platform=${platform}`,
        });

        if (res.ok) {
          recordVisit.textContent = "Recorded!";
          const data = await res.json();
          if (platform === "apple" && data.url) {
            const container = document.getElementById("button");
            const a = document.createElement("a");
            a.href = data.url;
            a.innerHTML =
              '<img src="apple-wallet-button.svg" alt="Update Apple Wallet" style="height: 50px; width: auto;">';
            container.innerHTML = "";
            container.appendChild(a);
            container.classList.add("show");
          }
        } else {
          const data = await res.json().catch(() => ({}));
          feedbackEl.textContent = data.message || "⚠️ Failed to record visit.";
          feedbackEl.classList.add("show");
          recordVisit.textContent = "Record Visit";
          recordVisit.disabled = false;
        }

        setTimeout(() => feedbackEl.classList.remove("show"), 3000);
      });
    </script>
  </body>
</html>
