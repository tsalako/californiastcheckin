<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>California St. Check-in</title>
  <link rel="stylesheet" href="/style.css" />
  <script src="https://accounts.google.com/gsi/client" async defer></script>
</head>
<body>
  <div class="container">
    <h2 class="form-title">California St. Check-in</h2>

    <div class="form-content">
      <!-- Identity -->
      <div class="stack-slot">
        <div id="signinWrapper" class="slot-item visible">
          <div id="g_id_onload"
               data-client_id="<%= googleClientId %>"
               data-callback="onSignIn"
               data-auto_prompt="false">
          </div>
          <div class="g_id_signin"
               data-type="standard"
               data-size="large"
               data-theme="outline"
               data-text="sign_in_with"
               data-shape="rectangular"
               data-logo_alignment="left">
          </div>
        </div>
        <div id="signedInWrapper" class="slot-item hidden">
          <p id="signedInAs" class="signed-in-as"></p>
        </div>
      </div>

      <!-- Action buttons -->
      <div class="stack-slot">
        <div id="createWrapper" class="slot-item hidden">
          <button id="createPassSubmit" class="button">Create Pass</button>
        </div>
        <div id="recordWrapper" class="slot-item hidden">
          <button id="recordVisit" class="button">Record Visit</button>
        </div>
      </div>

      <!-- Feedback + Wallet -->
      <div class="feedback-wallet-wrapper">
        <div id="feedback" class="feedback" aria-live="polite"></div>
        <div id="button" class="wallet-button-wrapper"></div>
      </div>
    </div>
  </div>

  <script>
    let idToken = '', userEmail = '', fullName = '';
    let isRecording = false;
    const isApple = /iPhone|iPad|iPod/i.test(navigator.userAgent);
    const platform = isApple ? 'apple' : 'google';

    const feedbackEl = document.getElementById('feedback');

    function onSignIn(response) {
      idToken = response.credential;
      const payload = JSON.parse(atob(idToken.split('.')[1]));
      userEmail = payload.email;
      fullName = payload.name;

      localStorage.setItem('userEmail', userEmail);
      localStorage.setItem('idToken', idToken);
      localStorage.setItem('name', fullName);

      document.getElementById('signinWrapper').classList.replace('visible', 'hidden');
      document.getElementById('signedInWrapper').classList.replace('hidden', 'visible');
      document.getElementById('signedInAs').textContent = `${fullName}`;

      fetch(`/hasPass?email=${encodeURIComponent(userEmail)}&idToken=${encodeURIComponent(idToken)}&platform=${platform}`)
        .then(res => res.json())
        .then(({ exists }) => {
          if (exists) {
            document.getElementById('recordWrapper').classList.replace('hidden', 'visible');
          } else {
            document.getElementById('createWrapper').classList.replace('hidden', 'visible');
          }
        });
    }

    // window.addEventListener('DOMContentLoaded', () => {
    //     const email = localStorage.getItem('userEmail');
    //     if (!email) {
    //         document.getElementById('signinWrapper').classList.replace('hidden', 'visible');
    //         return;
    //     }

    //     const container = document.getElementById('button');
    //     const idToken = ''; // not needed if bypassing identity

    //     fetch(`/hasPass?email=${encodeURIComponent(email)}&platform=${platform}`)
    //         .then(res => res.json())
    //         .then(({ exists }) => {
    //         if (exists) {
    //             document.getElementById('signinWrapper').classList.replace('visible', 'hidden');
    //             document.getElementById('signedInWrapper').classList.replace('hidden', 'visible');
    //             document.getElementById('signedInAs').textContent = localStorage.getItem('name') || `${email}`;
    //             document.getElementById('recordWrapper').classList.replace('hidden', 'visible');
    //         }
    //         });
    //     });

    const createPassSubmit = document.getElementById('createPassSubmit');
    createPassSubmit.disabled = false;
    createPassSubmit.textContent = "Create Pass";

    createPassSubmit.addEventListener('click', async () => {
      createPassSubmit.disabled = true;
      createPassSubmit.textContent = "Creating...";

      const email = localStorage.getItem('userEmail');
      const name = localStorage.getItem('name');
      const token = localStorage.getItem('idToken');
      const container = document.getElementById('button');

      const res = await fetch(`/create-pass`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: `name=${encodeURIComponent(name)}&email=${encodeURIComponent(email)}&idToken=${encodeURIComponent(token)}&platform=${platform}`
      });

        if (res.ok) {
            const data = await res.json();
            createPassSubmit.textContent = "Created";
        if (platform === 'apple') {
          const a = document.createElement('a');
          a.href = data.url;
          a.innerHTML = '<img src="apple-wallet-button.svg" alt="Save to Apple Wallet" style="height: 50px; width: auto;">';
          container.innerHTML = '';
          container.appendChild(a);
        } else {
          const a = document.createElement('a');
            a.href = data.button;
            a.innerHTML = `<img src="google-wallet-button.png" alt="Save to Google Wallet">`;
            container.innerHTML = '';
            container.appendChild(a);
        }
        container.classList.add('show');
        } else {
        const data = await res.json().catch(() => ({}));
        feedbackEl.textContent = data.message || '⚠️ Failed to create pass.';
        feedbackEl.classList.add('show');
        createPassSubmit.textContent = "Create Pass";
        createPassSubmit.disabled = false;
        }
    });

    const recordVisit = document.getElementById('recordVisit');
    recordVisit.disabled = false;
    recordVisit.textContent = "Record Visit";

    recordVisit.addEventListener('click', async () => {
     recordVisit.disabled = true;
     recordVisit.textContent = "Recording...";

      const email = localStorage.getItem('userEmail');
      const idToken = localStorage.getItem('idToken');
      const name = localStorage.getItem('name');

      const res = await fetch('/record-visit', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: `name=${encodeURIComponent(name)}&email=${encodeURIComponent(email)}&idToken=${encodeURIComponent(idToken)}&platform=${platform}`
      });

      if (res.ok) {
        recordVisit.textContent = "Recorded!";
        const data = await res.json();
        if (platform === 'apple' && data.url) {
          const container = document.getElementById('button');
             const a = document.createElement('a');
          a.href = data.url;
        a.innerHTML = '<img src="apple-wallet-button.svg" alt="Update Apple Wallet" style="height: 50px; width: auto;">';
          container.innerHTML = '';
          container.appendChild(a);
          container.classList.add('show');
        }
      } else {
        const data = await res.json().catch(() => ({}));
        feedbackEl.textContent = data.message || '⚠️ Failed to record visit.';
        feedbackEl.classList.add('show');
        recordVisit.textContent = "Record Visit";
        recordVisit.disabled = false;
      }

      setTimeout(() => feedbackEl.classList.remove('show'), 3000);
    });
  </script>
</body>
</html>
